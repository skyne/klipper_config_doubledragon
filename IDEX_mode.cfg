# This file contains a configuration snippet for a dual extruder
# printer using dual carriages (an "IDEX" printer).

# See docs/Config_Reference.md for a description of parameters.

# Definition for the primary carriage (holding the primary extruder)
# and the definition for the primary extruder in main config file

########################################
# DUAL-CARRIAGES
########################################

[respond]

[gcode_macro DC_VARS]
# Offset coordinates for dual_carriage
variable_offset_x: -0.14 #-0.06  #-0.3 #was -0.15
variable_offset_y: -1.0 #-0.15 #was -0.15 #-0.3 #was0
#variable_offset_z: 0.18  # 0.23
variable_offset_zt0: 0.0
variable_offset_zt1: 0.18
# Autopark parameters
## default autopark: 0:inactive - 1:active
variable_autopark: 1
variable_nozzlescrub: 0
variable_z_hop: 1
variable_movespeed: 300
variable_feedrate: 18000
# HeatBed size
variable_bed_x_min: 0
variable_bed_x_max: 415
# Print cooling fans names
variable_fan0: 'fanX1'
variable_fan1: 'fanX2'
# Extruders temp
variable_offset_temp: 0
variable_current_extruder: 0
variable_drop_temp_parking: 0
variable_parking_temp: 190

variable_toolhead_mappings: {
        'T0': { 
            'extruder': "extruder",
            'fan': "fanX1",
        },
        'T1': { 
            'extruder': "extruder1",
            'fan': "fanX2",
        }
    }

gcode:

## DUAL-CARRIAGES : FULL_CONTROL - AUTO-PARK


[gcode_macro CLEAN_NOZZLE]
gcode:
  {% set i = params.I|default(5)|int %}
    # Speed
  {% set s = params.S|default(100)|int %}
  # move
  {% set m = params.M|default(25)|int %}

  {% set dcvars = printer["gcode_macro DC_VARS"] %}

  {% if dcvars.current_extruder == 0 %}
    {% set moveDir = 1 %}
  {% else %}
    {% set moveDir = -1 %}
  {% endif %}
    _PARK_TOOL
    G91
    {% for iteration in range(i|int) %}
        G1 X{m * moveDir} F{s*60}                                    ; wipe back
        G1 X{m * -1 * moveDir} F{s*60}                                   ; wipe forth
    {% endfor %}
    G90
    _PARK_TOOL

[gcode_macro GET_ACTIVE_EXTRUDER]
gcode:
  {% set dcvars = printer["gcode_macro DC_VARS"] %}
  RESPOND PREFIX='' MSG="{dcvars.current_extruder}"

[gcode_macro T0]
description: Activate T0 in "FULL_CONTROL" or "AUTO-PARK"
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if printer.dual_carriage is defined %}
        {% if printer.dual_carriage.active_carriage == "CARRIAGE_1" %}
            M400
            {% if dcvars.autopark == 1 %}
                # z-hop
                {% if dcvars.z_hop|float > 0.0 %}
                    {% set max_z = printer.toolhead.axis_maximum.z|float %}
                    {% set cur_z = printer.toolhead.position.z|float %}
                    {% set z_safe = dcvars.z_hop|float if cur_z < (max_z - dcvars.z_hop|float) else (max_z - cur_z) %}
                    G91
                    G1 Z{z_safe}
                    G90
                {% endif %}
                # park tool
                SAVE_GCODE_STATE NAME=toolhead_state
                _PARK_TOOL

            {% endif %}

            {% if printer.idle_timeout.state == "Printing" %}
              {% if dcvars.drop_temp_parking == 1 %}
                G1 E-5
                {% set temp = printer["extruder1"].target|float %}
                  M104.1 T0 S{temp}
                  M104.1 T1 S{dcvars.parking_temp}
                  M109.1 T0 S{temp}
                {% endif %}
            {% endif %}

            # toggle carriage
            ACTIVATE_EXTRUDER EXTRUDER=extruder
            SET_DUAL_CARRIAGE CARRIAGE=0
            #SET_INPUT_SHAPER SHAPER_FREQ_X=45.6 SHAPER_FREQ_Y=82.8 SHAPER_TYPE_X=EI SHAPER_TYPE_Y=ZV

            {% if printer.idle_timeout.state == "Printing" %}
              G1 E4.5
            {% endif %}

            #_NOZZLE_SCRUB
            {% if dcvars.nozzlescrub == 1 %}
                RESTORE_GCODE_STATE NAME=toolhead_state MOVE=1 MOVE_SPEED={dcvars.movespeed}
            {% endif %}
            SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=current_extruder VALUE=0
            # offsets
            SET_GCODE_OFFSET X=0 Y=0 Z={dcvars.offset_zt0} MOVE=1
            # print fan speed
            _SET_PRINT_FANS_SPEED
            # restore z
            {% if (z_safe) is defined and printer.idle_timeout.state != "Printing" %}
                G91
                G1 Z-{z_safe}
                G90
            {% endif %}
        {% endif %}
    {% endif %}

[gcode_macro T1]
description: Activate T1 in "FULL_CONTROL" or "AUTO-PARK"
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if printer.dual_carriage is defined %}
        {% if printer.dual_carriage.active_carriage == "CARRIAGE_0" %}
            M400
            {% if dcvars.autopark == 1 %}
                # z-hop
                {% if dcvars.z_hop|float > 0.0 %}
                    {% set max_z = printer.toolhead.axis_maximum.z|float %}
                    {% set cur_z = printer.toolhead.position.z|float %}
                    {% set z_safe = dcvars.z_hop|float if cur_z < (max_z - dcvars.z_hop|float) else (max_z - cur_z) %}
                    G91
                    G1 Z{z_safe}
                    G90
                {% endif %}
                # park tool
                SAVE_GCODE_STATE NAME=toolhead_state
                _PARK_TOOL
            {% endif %}

            {% if printer.idle_timeout.state == "Printing" %}
              G1 E-5
              {% if dcvars.drop_temp_parking == 1 %}
                {% set temp = printer["extruder"].target|float %}
                M104.1 T1 S{temp}
                M104.1 T0 S{dcvars.parking_temp}
                M109.1 T1 S{temp}
              {% endif %}
            {% endif %}

            # toggle carriage
            ACTIVATE_EXTRUDER EXTRUDER=extruder1
            SET_DUAL_CARRIAGE CARRIAGE=1
            #SET_INPUT_SHAPER SHAPER_FREQ_X=43.6 SHAPER_FREQ_Y=70.4 SHAPER_TYPE_X=EI SHAPER_TYPE_Y=EI

            {% if printer.idle_timeout.state == "Printing" %}
              G1 E4.5
            {% endif %}

            #_NOZZLE_SCRUB
            {% if dcvars.nozzlescrub == 1 %}
                RESTORE_GCODE_STATE NAME=toolhead_state MOVE=1 MOVE_SPEED={dcvars.movespeed}
            {% endif %}
            SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=current_extruder VALUE=1
            # offsets
            G91
            G1 X{dcvars.offset_x|float * -1}
            G90
            SET_GCODE_OFFSET X={dcvars.offset_x} Y={dcvars.offset_y} Z={dcvars.offset_zt1} MOVE=1
            # print fan speed
            _SET_PRINT_FANS_SPEED
            # restore z
            {% if (z_safe) is defined and printer.idle_timeout.state != "Printing" %}
                G91
                G1 Z-{z_safe}
                G90
            {% endif %}
        {% endif %}
    {% endif %}

[gcode_macro PARK_ALL]
gcode:
  {% set dcvars = printer["gcode_macro DC_VARS"] %}
  {% set _active_extruder = dcvars.current_extruder %}
  T0
  _PARK_TOOL
  T1
  _PARK_TOOL
  T{_active_extruder}

[gcode_macro _PARK_TOOL]
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if printer.dual_carriage is defined %}
        SAVE_GCODE_STATE NAME=park_tool
        SET_GCODE_OFFSET X=0 Y=0 Z=0
        G90
        {% if printer.toolhead.extruder == 'extruder' %}
            {% set XPOS = printer.configfile.config.stepper_x.position_endstop|float + 0.2 %}
            RESPOND PREFIX="" MSG="Parking T0"
            G1 X{XPOS} F{dcvars.feedrate}
            #G1 X{printer.configfile.config.stepper_x.position_endstop} F{dcvars.feedrate}
        {% elif (printer.toolhead.extruder) == 'extruder1' %}
            {% set XPOS = printer.configfile.config.dual_carriage.position_max|float - 0.2 %}
            RESPOND PREFIX="" MSG='Parking T1 {XPOS}'
            G1 X{XPOS} F{dcvars.feedrate}
            #G1 X{printer.configfile.config.dual_carriage.position_endstop} F{dcvars.feedrate}
        {% else %}
            RESPOND TYPE=error MSG={ "Unknown extruder: %s".format(printer.toolhead.extruder) }
        {% endif %}

        RESTORE_GCODE_STATE NAME=park_tool
    {% endif %}

[gcode_macro _NOZZLE_SCRUB]
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if printer.dual_carriage is defined %}
        G90
        {% if printer.toolhead.extruder == 'extruder' %}
            {% set XPOS = printer.configfile.config.stepper_x.position_endstop|float + 1.0 %}
            {% set XPOS1 = printer.configfile.config.stepper_x.position_endstop|float + 15.0 %}
            G1 X{XPOS} F{dcvars.feedrate}
            G1 X{XPOS1} F{dcvars.feedrate}
            G1 X{XPOS} F{dcvars.feedrate}
            #G1 X{printer.configfile.config.stepper_x.position_endstop} F{dcvars.feedrate}
        {% elif (printer.toolhead.extruder) == 'extruder1' %}
            {% set XPOS = printer.configfile.config.dual_carriage.position_endstop|float - 1.0 %}
            {% set XPOS1 = printer.configfile.config.dual_carriage.position_endstop|float - 15.0 %}
            G1 X{XPOS} F{dcvars.feedrate}
            G1 X{XPOS1} F{dcvars.feedrate}
            G1 X{XPOS} F{dcvars.feedrate}
            #G1 X{printer.configfile.config.dual_carriage.position_endstop} F{dcvars.feedrate}
        {% else %}
            RESPOND TYPE=error MSG={ "Unknown extruder: %s".format(printer.toolhead.extruder) }
        {% endif %}
    {% endif %}

## DUAL-CARRIAGES : MODES ACTIVATION

[gcode_macro M605]
description: Set the dual-carriages mode
gcode:
    {% set mode = params.S|default(1)|int %}
    {% set offset_temp = params.R|default(0)|float %}
    {% if printer.dual_carriage is defined %}
        {% if (mode) == 0 %}
            SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=autopark VALUE=0
            MODE_FULL_CONTROL
        {% elif (mode) == 1 %}
            SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=autopark VALUE=1
            MODE_FULL_CONTROL
        {% elif (mode) == 2 and (params.X) is defined %}
            MODE_DUPLICATION X={params.X} R={offset_temp}
        {% elif (mode) == 2 %}
            MODE_DUPLICATION R={offset_temp}
        {% elif (mode) == 3 %}
            MODE_MIRRORED R={offset_temp}
        {% endif %}
        G1 F3000
    {% endif %}
    
## DUAL-CARRIAGES : PRINT FANS MANAGEMENT

[gcode_macro M106]
description: Override "M106" to allow multiple extruders.
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% set raw_speed = params.S|default(0)|float %}
    {% set fan_speed = (raw_speed / 255.0)|round(2) %}
    {% if (params.P) is defined %}
        {% set P_fan = dcvars.fan0 if (params.P)|int == 0 else dcvars.fan1 %}
        SET_FAN_SPEED FAN={P_fan} SPEED={fan_speed}
    {% elif printer.dual_carriage is defined %}
        _SET_PRINT_FANS_SPEED SPEED={fan_speed}
    {% endif %}
    
[gcode_macro M107]
description: Override "M107" to allow multiple extruders.
gcode:
    M106 S0
    
[gcode_macro _SET_PRINT_FANS_SPEED]
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if params.SPEED is defined %}
        {% set fan_speed = params.SPEED|float %}
    {% else %}
        # read print fan speed from active extruder
        {% set fan0_speed = printer["fan_generic " + dcvars.fan0].speed|float %}
        {% set fan1_speed = printer["fan_generic " + dcvars.fan1].speed|float %}
        {% set fan_speed = [fan0_speed, fan1_speed]|max %}
    {% endif %}
    {% if printer.dual_carriage.active_carriage == "BOTH" %}
        SET_FAN_SPEED FAN={dcvars.fan0} SPEED={fan_speed}
        SET_FAN_SPEED FAN={dcvars.fan1} SPEED={fan_speed}
    {% elif printer.dual_carriage.active_carriage == "CARRIAGE_0" %}
        SET_FAN_SPEED FAN={dcvars.fan0} SPEED={fan_speed}
        SET_FAN_SPEED FAN={dcvars.fan1} SPEED={fan_speed}
    {% elif printer.dual_carriage.active_carriage == "CARRIAGE_1" %}
        SET_FAN_SPEED FAN={dcvars.fan0} SPEED={fan_speed}
        SET_FAN_SPEED FAN={dcvars.fan1} SPEED={fan_speed}
    {% endif %}

## DUAL-CARRIAGES : HEATERS MANAGEMENT
    
[gcode_macro M104]
rename_existing: M104.1
description: Override "M104" to allow multiple extruders to be synchronized.
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% set temp = params.S|default(0)|float %}
    {% set tool = params.T|default(dcvars.current_extruder)|int %}
    {% if printer.dual_carriage.active_carriage|default() == "BOTH" %}
        {% if tool == 0 %}
            M104.1 T0 S{temp}
            M104.1 T1 S{temp + dcvars.offset_temp|float}
        {% endif %}
    {% else %}
        M104.1 T{tool} S{temp}
    {% endif %}
    
[gcode_macro M109]
rename_existing: M109.1
description: Override "M109" to allow multiple extruders to be synchronized.
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% set temp = params.S|default(0)|float %}
    {% set tool = params.T|default(dcvars.current_extruder)|int %}
    {% if printer.dual_carriage.active_carriage|default() == "BOTH" %}
        {% if tool == 0 %}  
            M104.1 T1 S{temp + dcvars.offset_temp|float}
            M109.1 T0 S{temp}
            M109.1 T1 S{temp + dcvars.offset_temp|float}
        {% endif %}
    {% else %}
        M109.1 T{tool} S{temp}
    {% endif %}

[gcode_macro _SYNC_EXTRUDERS_TEMP]
gcode:
    {% set temp = printer["extruder"].target|float %}
    M109 S{temp}
